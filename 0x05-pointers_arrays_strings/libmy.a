!<arch>
100-atoi.c/     0           0     0     644     503       `
#include "main.h"
/**
 * _atoi - converts a string to an integer.
 * @s: the string to convert
 * Return: the converted string.
 */
int _atoi(char *s)
{
	short boolean;
	int i, minus, result;

	i = minus = result = boolean = 0;
	minus = -1;
	while (s[i] != '\0')
	{
		if (s[i] == '-')
		{
			minus *= -1;
		}
		if (s[i] >= '0' && s[i] <= '9')
		{
			result *= 10;
			result -= (s[i] - '0');
			boolean = 1;
		}
		else if (boolean == 1)
		{
			break;
		}
		i++;
	}
	result *= minus;
	return (result);
}


0-reset_to_98.c/0           0     0     644     181       `
#include "main.h"
/**
 * reset_to_98- takes a pointer  and updates the value it points to to 98
 * @n:the value that holds the address
 */
void reset_to_98(int *n)
	{
		*n = 98;
	}

1-swap.c/       0           0     0     644     162       `
#include "main.h"
/**
 * swap_int-swaps two integers
 * @a:first integer
 * @b:2nd integer
 */
void swap_int(int *a, int *b)
{
	int i = *a;

	*a = *b;
	*b = i;
}
2-strlen.c/     0           0     0     644     178       `
#include "main.h"
/**
 * _strlen-prints the lengt of a string
 * @s:string
 * Return: string length
 */
int _strlen(char *s)
	{
		int len;

		len = strlen(s);
		return (len);
	}
3-puts.c/       0           0     0     644     132       `
#include "main.h"
/**
 * _puts- prints a string, followed by a new line
 * @str:string
 */
void _puts(char *str)
	{
		puts(str);
	}
4-print_rev.c/  0           0     0     644     198       `
#include "main.h"
/**
 * print_rev-prints string in a reverse order
 * @s:string
 */
void print_rev(char *s)
	{
		int len = strlen(s);

		while (len--)
			_putchar(*(s + len));
		_putchar('\n');
	}
5-rev_string.c/ 0           0     0     644     255       `
#include "main.h"
/**
 * rev_string-verses a string
 * @s:string
 */
void rev_string(char *s)
{
	int i, len = strlen(s);
	int mid = len / 2;
	char temp;

	for (i = 0; i < mid; i++)
	{
		temp = s[i];
		s[i] = s[len - i - 1];
		s[len - i - 1] = temp;
	}

}

6-puts2.c/      0           0     0     644     231       `
#include "main.h"
/**
 * puts2-prints every other character of a string,
 * @str:string
 */
void puts2(char *str)
{
	int i = 0;

	while (*(str + i) != '\0')
	{
		if (i % 2 == 0)
			_putchar(*(str + i));
	i++;
	}
	_putchar('\n');
}

7-puts_half.c/  0           0     0     644     262       `
#include "main.h"
/**
 * puts_half-prints 2nd half of a string
 * @str:string
 */
void puts_half(char *str)
{
	int len = strlen(str);
	int n, i;

	n = len / 2 + 1;
	if (n % 2 == 0)
		n = len / 2;
	for (i = n; i < len; i++)
		_putchar(str[i]);
	_putchar('\n');
}
8-print_array.c/0           0     0     644     289       `
#include "main.h"
/**
 * print_array-prints integers in an array
 * @a:array name
 * @n:number of values
 */
void print_array(int *a, int n)
{
	int i;

	for (i = 0; i < n; i++)
	{
		if (i != n - 1)
		{
			printf("%d, ", a[i]);
		}
		else
		{
			printf("%d", a[i]);
		}
	}
	printf("\n");
}

9-strcpy.c/     0           0     0     644     204       `
#include "main.h"
/**
 * *_strcpy-copies the string pointed to
 * @dest:destination
 * @src:source
 * Return:value at dest
 */
char *_strcpy(char *dest, char *src)
{
	strcpy(dest, src);
	return (dest);
}
_putchar.c/     0           0     0     644     246       `
#include <unistd.h>
/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
	{
		return (write(1, &c, 1));
	}
